#!/usr/bin/env python
import sys

def main():
    with open('rosalind_cons.txt', 'r') as doc:
        sequence = doc.read().split('>')
    sequences = {}
    n = len(sequence)
    for i in range(1, n):
        components = sequence[i].split('\n')
        seqs = ''.join(components[1:])
        sequences[i-1] = seqs
    A_count = []
    C_count = []
    G_count = []
    T_count = []
    base_dict = {'A': A_count, 'G': G_count, 'C': C_count, 'T': T_count}
    #figuring out how long the provided sequences are
    m = len(seqs)
    #figuring out how many sequences are provided
    p = len(sequences)
    #creating lists of zeroes for each base
    for j in range(m):
        for base in base_dict.keys():
            base_dict[base].append(0)
    #for each base position in the sequences
    for pos in range(m):
        #for each sequence provided
        for seq in range(p):
            base = sequences[seq][pos]
            #adds 1 to the position in the corresponding dictionary
            (base_dict[base])[pos] += 1
    for q in range(m):
        shortlist = {}
        for base in base_dict.keys():
            shortlist[base] = base_dict[base][q] 
        print(max(shortlist, key=shortlist.get), end='')
    A_values = ' '.join(str(a) for a in A_count)
    C_values = ' '.join(str(a) for a in C_count)
    G_values = ' '.join(str(a) for a in G_count)
    T_values = ' '.join(str(a) for a in T_count)
    print()
    print('A: ' + A_values)
    print('C: ' + C_values)
    print('G: ' + G_values)
    print('T: ' + T_values)


if __name__ == "__main__":
    main()